name: Pull Request Workflow
env: 
  REGION: us-west-2
  DIST_OUTPUT_BUCKET: msam-pr-build
  SOLUTION_NAME: aws-media-services-application-mapper

on:
  pull_request:
    types: [opened, edited, reopened, synchronize]
    
jobs:
  pull-request-workflow:
    runs-on: ubuntu-latest
    environment: test_env_var 

    name: Scan, build and review pull request content
    steps:
      - name: Extract PR Number
        shell: bash
        run: echo "##[set-output name=number;]$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')"
        id: extract_pr
      - name: Checkout
        uses: actions/checkout@v2
      - name: ClamAV Scan
        uses: djdefi/gitavscan@main
        with:
          full: '--full'
      - name: Trufflehog Scan
        uses: edplato/trufflehog-actions-scan@master
        with:
          scanArguments: '--regex --entropy=False'
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
            aws-region: ${{ env.REGION }}
      - name: Update system path
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Install required system packages
        run: |
          pip install --upgrade --force-reinstall -r deployment/requirements.txt 2> error.txt
          if [ -s error.txt ]; then
            echo "ERROR: System package installation failed."
            cat error.txt
            exit 1
          fi
      - name: Run build script
        run: |
          cd deployment
          ./build-s3-dist.sh $DIST_OUTPUT_BUCKET $SOLUTION_NAME PR${{ steps.extract_pr.outputs.number }}
      - name: Deploy to S3
        run: |
          cd $RUNNER_WORKSPACE/$SOLUTION_NAME/deployment
          ./deploy.sh -b $DIST_OUTPUT_BUCKET -s $SOLUTION_NAME -v PR${{ steps.extract_pr.outputs.number }} -r 'us-west-2 eu-west-1' -t dev -a none
      - name: Check with cfn-lint
        uses: scottbrenner/cfn-lint-action@master
        with:
          args: 'deployment/global-s3-assets/*release.template'
        # continue-on-error: true
      - name: Check with cfn-nag
        uses: stelligent/cfn_nag@master
        with:
          input_path: deployment/global-s3-assets
        # continue-on-error: true
